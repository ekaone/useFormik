{"version":3,"sources":["components/FormikSignIn/FormikSignIn2.js","components/FormikProject/mockData.js","components/FormikProject/ViewOutput.js","components/FormikProject/FormikProject.js","components/FormikTextField/FormikTextField.js","components/FormikField/FormikField.js","components/FormikCheckout/AddressForm.js","components/FormikCheckout/PaymentForm.js","components/FormikCheckout/Review.js","components/FormikCheckout/Copyright.js","components/FormikCheckout/useStyles.js","components/FormikCheckout/Checkout.js","components/FormikCheckout/FormikCheckout.js","components/Navigation/routes.js","components/Navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","display","flexDirection","alignItems","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","width","marginTop","submit","SignIn2","classes","Container","component","maxWidth","CssBaseline","className","Avatar","initialValues","email","password","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleSubmit","handleBlur","isSubmitting","noValidate","TextField","value","onChange","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","Box","mt","projectsData","projectName","projectValue","projectDuration","table","minWidth","ViewOutput","props","TableContainer","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","rows","map","row","key","scope","validationSchema","yup","formControl","root","flexGrow","padding","textAlign","text","FormikProject","useState","projects","setProjects","useEffect","console","log","Grid","container","item","xs","sm","previousState","style","paddingTop","as","helperText","error","Boolean","Select","displayEmpty","MenuItem","FormHelperText","justifyContent","disabled","project","FormikTextField","users","reimburse","user","Checkbox","middleName","max","MyRadio","useField","field","FormControlLabel","control","Radio","MyTextField","placeholder","meta","errorText","FormikField","firstName","lastName","isTall","cookies","yogurt","pets","Math","random","data","arrayHelpers","pet","index","cookiesLength","length","addressLine1","addressLine2","city","state","zip","country","AddressForm","Fragment","gutterBottom","saveAddress","language","dark","cardName","cardNumber","expDate","cvv","PaymentForm","saveCard","md","products","desc","price","addresses","payments","detail","listItem","total","fontWeight","title","Review","List","disablePadding","product","ListItem","ListItemText","primary","join","direction","payment","appBar","position","layout","marginLeft","marginRight","breakpoints","up","marginBottom","stepper","buttons","button","steps","Checkout","React","activeStep","setActiveStep","Stepper","Step","StepLabel","step","Error","getStepContent","onClick","FormikCheckout","routes","path","list","fullList","menu","paddingBottom","fab","top","right","Navigation","anchor","setState","toggleDrawer","open","event","Fab","role","SwipeableDrawer","onClose","onOpen","clsx","onKeyDown","route","to","App","basename","process","exact","FormikSignIn","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8a1063e7.chunk.js","sourcesContent":["import React from \"react\";\r\n// MUI\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n// Formik\r\nimport { Formik, Field, Form } from \"formik\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://ekaprasetia.com/\">\r\n        Eka Prasetia\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    // marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nexport default function SignIn2() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in Formik and Material UI\r\n        </Typography>\r\n        <Formik\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          validate={values => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n              errors.email = \"Required Email\";\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = \"Invalid email address\";\r\n            } else if (!values.password) {\r\n              errors.password = \"Required Password\";\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              alert(JSON.stringify(values, null, 2));\r\n              // console.log(values);\r\n              setSubmitting(false);\r\n            }, 400);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n            /* and other goodies */\r\n          }) => (\r\n            <Form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n              <TextField\r\n                value={values.email}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n              />\r\n              <Typography\r\n                color=\"error\"\r\n                variant=\"h6\"\r\n                component=\"h6\"\r\n                align=\"center\"\r\n              >\r\n                {errors.email && touched.email && errors.email}\r\n              </Typography>\r\n              <TextField\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n              <Typography\r\n                color=\"error\"\r\n                variant=\"h6\"\r\n                component=\"h6\"\r\n                align=\"center\"\r\n              >\r\n                {errors.password && touched.password && errors.password}\r\n              </Typography>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n              >\r\n                Sign In\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","export const projectsData = [\r\n  {\r\n    projectName: \"Expense\",\r\n    projectValue: 1000,\r\n    projectDuration: 3\r\n  },\r\n  {\r\n    projectName: \"Transport\",\r\n    projectValue: 500,\r\n    projectDuration: 5\r\n  },\r\n  {\r\n    projectName: \"Goodies\",\r\n    projectValue: 10000,\r\n    projectDuration: 8\r\n  }\r\n];\r\n","import React from \"react\";\r\n// MUI\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 400\r\n  }\r\n});\r\n\r\nexport default function ViewOutput(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          className={classes.table}\r\n          size=\"small\"\r\n          aria-label=\"a dense table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"right\">Name&nbsp;(g)</TableCell>\r\n              <TableCell align=\"right\">Value&nbsp;($)</TableCell>\r\n              <TableCell align=\"right\">Duration&nbsp;(days)</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.rows.map(row => (\r\n              <TableRow key={row.projectName}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.projectName}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.projectValue}</TableCell>\r\n                <TableCell align=\"right\">{row.projectDuration}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport shorid from \"shortid\";\r\nimport { projectsData } from \"./mockData\";\r\nimport ViewOutput from \"./ViewOutput\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst validationSchema = yup.object({\r\n  projectName: yup.string().required(\"Need Project Name\"),\r\n  projectValue: yup.string().required(\"Need Project Value\"),\r\n  projectDuration: yup.string().required(\"Duration is required!\")\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    minWidth: 400\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nexport default function FormikProject() {\r\n  const classes = useStyles();\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setProjects(projectsData);\r\n  }, []);\r\n\r\n  console.log(projects);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.paper}>\r\n              <Formik\r\n                initialValues={{\r\n                  projectName: \"\",\r\n                  projectValue: \"\",\r\n                  projectDuration: \"\"\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                  setSubmitting(true);\r\n                  setProjects(previousState => {\r\n                    return [...previousState, values];\r\n                  });\r\n                  // aynsc call\r\n                  // console.log(\"Submit: \", values);\r\n                  setSubmitting(false);\r\n                }}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting\r\n                }) => (\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <div style={{ paddingTop: 15 }}>\r\n                      <Field\r\n                        as={TextField}\r\n                        id=\"project-name\"\r\n                        label=\"Project Name\"\r\n                        type=\"text\"\r\n                        name=\"projectName\"\r\n                        onChange={handleChange}\r\n                        value={values.projectName}\r\n                        variant=\"outlined\"\r\n                        helperText={\r\n                          touched.projectName ? errors.projectName : \"\"\r\n                        }\r\n                        error={Boolean(errors.projectName)}\r\n                      />\r\n                    </div>\r\n                    <div style={{ paddingTop: 15 }}>\r\n                      <Field\r\n                        as={TextField}\r\n                        id=\"project-value\"\r\n                        label=\"Project Value\"\r\n                        type=\"number\"\r\n                        name=\"projectValue\"\r\n                        onChange={handleChange}\r\n                        value={values.projectValue}\r\n                        variant=\"outlined\"\r\n                        helperText={\r\n                          touched.projectValue ? errors.projectValue : \"\"\r\n                        }\r\n                        error={Boolean(errors.projectValue)}\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        paddingTop: 15\r\n                      }}\r\n                    >\r\n                      <Field\r\n                        as={Select}\r\n                        displayEmpty\r\n                        name=\"projectDuration\"\r\n                        type=\"select\"\r\n                        variant=\"outlined\"\r\n                        error={Boolean(\r\n                          errors.projectDuration && touched.projectDuration\r\n                        )}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>Duration</em>\r\n                        </MenuItem>\r\n                        <MenuItem value=\"1\">1</MenuItem>\r\n                        <MenuItem value=\"2\">2</MenuItem>\r\n                        <MenuItem value=\"3\">3</MenuItem>\r\n                      </Field>\r\n                      <FormHelperText\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"center\",\r\n                          textAlign: \"center\"\r\n                        }}\r\n                      >\r\n                        {errors.projectDuration}\r\n                      </FormHelperText>\r\n                    </div>\r\n                    <br />\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      disabled={isSubmitting}\r\n                      type=\"submit\"\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <ViewOutput rows={projects} />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object({\r\n  project: yup.string().required()\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControl: {\r\n    minWidth: 120\r\n  }\r\n}));\r\n\r\nexport default function FormikTextField() {\r\n  const classes = useStyles();\r\n\r\n  const [users, setUsers] = useState([\r\n    { id: 1, name: \"John\" },\r\n    { id: 2, name: \"Jane\" },\r\n    { id: 3, name: \"Tony\" },\r\n    { id: 4, name: \"Donald Trump\" }\r\n  ]);\r\n\r\n  // useEffect(() => {\r\n  //   axios.get('/user')\r\n  //   .then(function (response) {\r\n  //     console.log(response.data);\r\n  //     setUsers(response.data)\r\n  //   })\r\n  //   .catch(function (error) {\r\n  //     console.log(error);\r\n  //   })\r\n\r\n  //   return () => {\r\n  //     console.log('Component unmount')\r\n  //   }\r\n  // }, [])\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <center>\r\n        <Formik\r\n          initialValues={{ name: [], project: \"\", reimburse: [] }}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setSubmitting(true);\r\n            // make aynsc call\r\n            alert(JSON.stringify(values, null, 2));\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Select\r\n                name=\"name\"\r\n                type=\"select\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                displayEmpty\r\n                variant=\"outlined\"\r\n              >\r\n                <MenuItem value=\"\">\r\n                  <em>None</em>\r\n                </MenuItem>\r\n                {users.map(user => {\r\n                  return (\r\n                    <MenuItem key={user.id} value={user.name}>\r\n                      {user.name}\r\n                    </MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n              <br />\r\n              <br />\r\n              <TextField\r\n                id=\"standard-basic\"\r\n                label=\"Name\"\r\n                type=\"text\"\r\n                name=\"project\"\r\n                onChange={handleChange}\r\n                value={values.project}\r\n                variant=\"outlined\"\r\n                helperText={touched.project ? errors.project : \"\"}\r\n                error={touched.project && Boolean(errors.project)}\r\n              />\r\n              <br />\r\n              <Field name=\"reimburse\" value=\"Checked True\" as={Checkbox} />\r\n              <br />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n              <pre>\r\n                {JSON.stringify(\r\n                  {\r\n                    values: values\r\n                  },\r\n                  null,\r\n                  2\r\n                )}\r\n              </pre>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </center>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Formik, Field, Form, useField, FieldArray } from \"formik\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Checkbox,\r\n  Radio,\r\n  FormControlLabel,\r\n  Select,\r\n  MenuItem,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport * as yup from \"yup\";\r\n\r\nconst validationSchema = yup.object({\r\n  middleName: yup\r\n    .string()\r\n    .required()\r\n    .max(10)\r\n});\r\n\r\nconst MyRadio = ({ label, ...props }) => {\r\n  const [field] = useField(props);\r\n  return <FormControlLabel {...field} control={<Radio />} />;\r\n};\r\n\r\nconst MyTextField = ({ placeholder, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  return (\r\n    <TextField\r\n      placeholder={placeholder}\r\n      {...field}\r\n      helperText={errorText}\r\n      error={!!errorText}\r\n    />\r\n  );\r\n};\r\n\r\nconst FormikField = () => (\r\n  <>\r\n    <center>\r\n      <Formik\r\n        initialValues={{\r\n          middleName: \"\",\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          isTall: false,\r\n          cookies: [],\r\n          yogurt: \"\",\r\n          pets: [{ type: \"dog\", name: \"eka\", id: \"\" + Math.random() }]\r\n        }}\r\n        validationSchema={validationSchema}\r\n        // validate={values => {\r\n        //   const errors = {}\r\n\r\n        //   if(values.middleName.includes(\"bob\")) {\r\n        //     errors.middleName = \"no bob\"\r\n        //   }\r\n\r\n        //   return errors\r\n        // }}\r\n        onSubmit={(data, { setSubmitting }) => {\r\n          setSubmitting(true);\r\n          // make aynsc call\r\n          alert(JSON.stringify(data, null, 2));\r\n          console.log(\"Submit: \", data);\r\n          setSubmitting(false);\r\n        }}\r\n      >\r\n        {({ values, errors, isSubmitting }) => (\r\n          <Form>\r\n            <MyTextField placeholder=\"Middle name\" name=\"middleName\" />\r\n            <div>\r\n              <Field\r\n                placeholder=\"First name\"\r\n                name=\"firstName\"\r\n                type=\"input\"\r\n                as={TextField}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Field\r\n                placeholder=\"Last name\"\r\n                name=\"lastName\"\r\n                type=\"input\"\r\n                as={TextField}\r\n              />\r\n            </div>\r\n            <br />\r\n            <Typography>Option goodies</Typography>\r\n            <Field name=\"isTall\" type=\"checkbox\" as={Checkbox} />\r\n            <Typography>Cookies</Typography>\r\n            <Field name=\"cookies\" value=\"abc\" type=\"checkbox\" as={Checkbox} />\r\n            <Field name=\"cookies\" value=\"123\" type=\"checkbox\" as={Checkbox} />\r\n            <Field name=\"cookies\" value=\"jkl\" type=\"checkbox\" as={Checkbox} />\r\n            <Typography>Yogurt</Typography>\r\n            <Field name=\"yogurt\" value=\"apple\" type=\"radio\" as={Radio} />\r\n            <Field name=\"yogurt\" value=\"pine apple\" type=\"radio\" as={Radio} />\r\n            <Field name=\"yogurt\" value=\"banana\" type=\"radio\" as={Radio} />\r\n            <MyRadio\r\n              name=\"yogurt\"\r\n              type=\"radio\"\r\n              value=\"blueberry\"\r\n              label=\"Blueberry\"\r\n            />\r\n            <div>\r\n              <FieldArray name=\"pets\">\r\n                {arrayHelpers => (\r\n                  <div>\r\n                    {values.pets.map((pet, index) => {\r\n                      return (\r\n                        <div key={pet.id}>\r\n                          <MyTextField\r\n                            placeholder=\"pet name\"\r\n                            name={`pets.${index}.name`}\r\n                          />\r\n                          <Field\r\n                            name={`pets.${index}.type`}\r\n                            type=\"select\"\r\n                            as={Select}\r\n                          >\r\n                            <MenuItem value=\"dog\">Dog</MenuItem>\r\n                            <MenuItem value=\"bird\">Bird</MenuItem>\r\n                            <MenuItem value=\"frog\">Frog</MenuItem>\r\n                          </Field>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </FieldArray>\r\n            </div>\r\n            <br />\r\n            <div>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </div>\r\n            <pre>\r\n              {JSON.stringify(\r\n                {\r\n                  values: values,\r\n                  errors: errors,\r\n                  cookiesLength: values.cookies.length\r\n                },\r\n                null,\r\n                2\r\n              )}\r\n            </pre>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </center>\r\n  </>\r\n);\r\n\r\nexport default FormikField;\r\n","import React, { useState } from \"react\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n// Formik\r\nimport { Formik, Field, Form } from \"formik\";\r\n// YUP\r\nimport * as yup from \"yup\";\r\n// MUI\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst validationSchema = yup.object({\r\n  firstName: yup.string().required(\"Need First Name\"),\r\n  lastName: yup.string().required(\"Need Last Value\"),\r\n  addressLine1: yup.string().required(\"Address is required!\"),\r\n  addressLine2: yup.string().required(\"Second Address is required!\"),\r\n  city: yup.string().required(\"City is required!\"),\r\n  state: yup.string().required(\"State is required!\"),\r\n  zip: yup.string().required(\"Zip is required!\"),\r\n  country: yup.string().required(\"Country is required!\")\r\n});\r\n\r\nexport default function AddressForm() {\r\n  const [address, setAddress] = useState([]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Formik\r\n          initialValues={{\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            addressLine1: \"\",\r\n            addressLine2: \"\",\r\n            city: \"\",\r\n            state: \"\",\r\n            country: \"\",\r\n            saveAddress: []\r\n          }}\r\n          validationSchema={validationSchema}\r\n          // onSubmit={(values, { setSubmitting }) => {\r\n          //   setSubmitting(true);\r\n\r\n          //   console.log(\"Submit: \", values);\r\n          //   setSubmitting(false);\r\n          // }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n            <>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  required\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  label=\"First name\"\r\n                  fullWidth\r\n                  autoComplete=\"given-name\"\r\n                  error={Boolean(errors.firstName)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  required\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  label=\"Last name\"\r\n                  fullWidth\r\n                  autoComplete=\"given-name\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.addressLine1}\r\n                  required\r\n                  id=\"addressLine1\"\r\n                  name=\"addressLine1\"\r\n                  label=\"Address line 1\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping address-line1\"\r\n                  error={Boolean(errors.addressLine1)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.addressLine2}\r\n                  required\r\n                  id=\"address2\"\r\n                  name=\"addressLine2\"\r\n                  label=\"Address line 2\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping address-line1\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.city}\r\n                  required\r\n                  id=\"city\"\r\n                  name=\"city\"\r\n                  label=\"City\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping address-level2\"\r\n                  error={Boolean(errors.city)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.state}\r\n                  id=\"state\"\r\n                  name=\"state\"\r\n                  label=\"State/Province/Region\"\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.zip}\r\n                  required\r\n                  id=\"zip\"\r\n                  name=\"zip\"\r\n                  label=\"Zip / Postal code\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping postal-code\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.country}\r\n                  required\r\n                  id=\"country\"\r\n                  name=\"country\"\r\n                  label=\"Country\"\r\n                  fullWidth\r\n                  autoComplete=\"shipping country\"\r\n                  error={Boolean(errors.country)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Field name=\"saveAddress\" value=\"yes\" as={Checkbox} />\r\n                <Typography display=\"inline\">\r\n                  Use this address for Payment details\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <SyntaxHighlighter language=\"json\" style={dark}>\r\n                  {JSON.stringify(values, null, 2)}\r\n                </SyntaxHighlighter>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { dark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\r\n// Formik\r\nimport { Formik, Field, Form } from \"formik\";\r\n// YUP\r\nimport * as yup from \"yup\";\r\n// MUI\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst validationSchema = yup.object({\r\n  cardName: yup.string().required(),\r\n  cardNumber: yup.string().required(),\r\n  expDate: yup.string().required(),\r\n  cvv: yup.string().required()\r\n});\r\n\r\nexport default function PaymentForm() {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Formik\r\n          initialValues={{\r\n            cardName: \"\",\r\n            cardNumber: \"\",\r\n            expDate: \"\",\r\n            cvv: \"\",\r\n            saveCard: []\r\n          }}\r\n          validationSchema={validationSchema}\r\n          // onSubmit={(values, { setSubmitting }) => {\r\n          //   setSubmitting(true);\r\n\r\n          //   console.log(\"Submit: \", values);\r\n          //   setSubmitting(false);\r\n          // }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting\r\n          }) => (\r\n            <>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.cardName}\r\n                  required\r\n                  id=\"cardName\"\r\n                  name=\"cardName\"\r\n                  label=\"Name on card\"\r\n                  fullWidth\r\n                  autoComplete=\"cc-name\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.cardNumber}\r\n                  required\r\n                  id=\"cardNumber\"\r\n                  name=\"cardNumber\"\r\n                  label=\"Card number\"\r\n                  fullWidth\r\n                  autoComplete=\"cc-number\"\r\n                  error={Boolean(errors.cardNumber)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.expDate}\r\n                  required\r\n                  id=\"expDate\"\r\n                  name=\"expDate\"\r\n                  label=\"Expiry date\"\r\n                  fullWidth\r\n                  autoComplete=\"cc-exp\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.cvv}\r\n                  required\r\n                  id=\"cvv\"\r\n                  name=\"cvv\"\r\n                  label=\"CVV\"\r\n                  helperText=\"Last three digits on signature strip\"\r\n                  fullWidth\r\n                  autoComplete=\"cc-csc\"\r\n                  error={Boolean(errors.cvv)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Field name=\"saveCard\" value=\"yes\" as={Checkbox} />\r\n                <Typography display=\"inline\">\r\n                  Remember credit card details for next time\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <SyntaxHighlighter language=\"json\" style={dark}>\r\n                  {JSON.stringify(values, null, 2)}\r\n                </SyntaxHighlighter>\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Formik>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst products = [\r\n  { name: \"Product 1\", desc: \"A nice thing\", price: \"$9.99\" },\r\n  { name: \"Product 2\", desc: \"Another thing\", price: \"$3.45\" },\r\n  { name: \"Product 3\", desc: \"Something else\", price: \"$6.51\" },\r\n  { name: \"Product 4\", desc: \"Best thing of all\", price: \"$14.11\" },\r\n  { name: \"Shipping\", desc: \"\", price: \"Free\" }\r\n];\r\nconst addresses = [\r\n  \"1 Material-UI Drive\",\r\n  \"Reactville\",\r\n  \"Anytown\",\r\n  \"99999\",\r\n  \"USA\"\r\n];\r\nconst payments = [\r\n  { name: \"Card type\", detail: \"Visa\" },\r\n  { name: \"Card holder\", detail: \"Mr John Smith\" },\r\n  { name: \"Card number\", detail: \"xxxx-xxxx-xxxx-1234\" },\r\n  { name: \"Expiry date\", detail: \"04/2024\" }\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0)\r\n  },\r\n  total: {\r\n    fontWeight: 700\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function Review() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {products.map(product => (\r\n          <ListItem className={classes.listItem} key={product.name}>\r\n            <ListItemText primary={product.name} secondary={product.desc} />\r\n            <Typography variant=\"body2\">{product.price}</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            $34.06\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Shipping\r\n          </Typography>\r\n          <Typography gutterBottom>John Smith</Typography>\r\n          <Typography gutterBottom>{addresses.join(\", \")}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {payments.map(payment => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// MUI\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://ekaprasetia.com/\">\r\n        Eka Prasetia\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    // marginTop: theme.spacing(10),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3)\r\n    }\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5)\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1)\r\n  }\r\n}));\r\n","import React from \"react\";\r\n// MUI\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\n// components\r\nimport Copyright from \"./Copyright\";\r\nimport { useStyles } from \"./useStyles\";\r\n\r\nconst steps = [\"Shipping address\", \"Payment details\", \"Review your order\"];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <AddressForm />;\r\n    case 1:\r\n      return <PaymentForm />;\r\n    case 2:\r\n      return <Review />;\r\n    default:\r\n      throw new Error(\"Unknown step\");\r\n  }\r\n}\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map(label => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for your order.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is #2001539. We have emailed your order\r\n                  confirmation, and will send you an update when your order has\r\n                  shipped.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? \"Place order\" : \"Next\"}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// component\r\nimport Checkout from \"./Checkout\";\r\n\r\nexport default function FormikCheckout() {\r\n  return (\r\n    <div>\r\n      <Checkout />\r\n    </div>\r\n  );\r\n}\r\n","export const routes = [\r\n  { id: 1, name: \"Home\", path: \"/\" },\r\n  { id: 2, name: \"Formik Project\", path: \"/formik-project\" },\r\n  { id: 3, name: \"Formik SignIn\", path: \"/formik-signin\" },\r\n  { id: 4, name: \"Formik Text Field\", path: \"/formik-textfield\" },\r\n  { id: 5, name: \"Formik Field\", path: \"/formik-field\" }\r\n];\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n// MUI\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { routes } from \"./routes\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  menu: {\r\n    textAlign: \"right\",\r\n    paddingBottom: \"80px\"\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    top: theme.spacing(2),\r\n    right: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function Navigation() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => event => {\r\n    if (\r\n      event &&\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = anchor => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\"\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        {routes.map(route => (\r\n          <ListItem component={Link} to={route.path} button key={route.id}>\r\n            <ListItemText primary={route.name} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.menu}>\r\n      <React.Fragment key={\"top\"}>\r\n        {/* <Button\r\n          onClick={toggleDrawer(\"top\", true)}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          <span role=\"img\" aria-label=\"menu\" style={{ marginRight: \"10px\" }}>\r\n            🔎\r\n          </span>\r\n          {\"Menu\"}\r\n        </Button> */}\r\n        <Fab\r\n          className={classes.fab}\r\n          color=\"secondary\"\r\n          aria-label=\"add\"\r\n          onClick={toggleDrawer(\"top\", true)}\r\n        >\r\n          <span role=\"img\" aria-label=\"menu\">\r\n            🔎\r\n          </span>\r\n        </Fab>\r\n        <SwipeableDrawer\r\n          anchor={\"top\"}\r\n          open={state[\"top\"]}\r\n          onClose={toggleDrawer(\"top\", false)}\r\n          onOpen={toggleDrawer(\"top\", true)}\r\n        >\r\n          {list(\"top\")}\r\n        </SwipeableDrawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport {\r\n  FormikSignIn,\r\n  FormikProject,\r\n  FormikTextField,\r\n  FormikField,\r\n  FormikCheckout,\r\n  Navigation\r\n} from \"./components\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Navigation />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={FormikCheckout} />\r\n          <Route path=\"/formik-project\" component={FormikProject} />\r\n          <Route path=\"/formik-field\" component={FormikField} />\r\n          <Route path=\"/formik-textfield\" component={FormikTextField} />\r\n          <Route path=\"/formik-signin\" component={FormikSignIn} />\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\nserviceWorker.register();\r\n"],"sourceRoot":""}